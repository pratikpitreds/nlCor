% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nlCor.R
\name{nlCor}
\alias{nlCor}
\title{Non-Linear Correaltion Function}
\usage{
nlCor(x, y, inverse = F, n = 2, method = "log", na.rm = F)
nlCor(x, y, inverse = F, n = 2,
      method = c("log","expo","poly","Linear"), na.rm = F)
}
\arguments{
\item{x}{ a numeric vector, matrix or data frame.}

\item{y}{ second dataset (can be a matrix or dataframe or array)}

\item{inverse}{ take the inverse relation eg. transforming 1/x^2,1/x^3 instead of x^2, x^3, default is false.}

\item{n}{ Maximum power or degree one would want to check, default is 2.}

\item{method}{  a character string indicating which Non linear method is to be computed - log(logarithmic), poly(Polynomial), expo(Exponential) and Linear. Default is log.}
}
\value{
nlCor(x,y)
}
\description{
Non Linear Correaltion function - It helps to explore the hidden Non-linear relationships between given x and y. Non linear correlation between variables is quantified and given as output, which helps to understand the level of non linear association among variables. Transformation is done with reference from tukey's ladder of transformation/
}
\examples{
y <- c(1,2,3,4,5,6)
x <- c(exp(1),exp(2),exp(3),exp(4),exp(5),exp(6))

nlCor(x,y,n=2,method=c("log","Linear"))

y <- c(1,4,9,16,25)
x <- c(1,2,3,4,5)

nlCor(x,y,n=2,method=c("poly","Linear"))

y <- c(1,8,27,64,125)
x <- c(1,2,3,4,5)

nlCor(x,y,n=3,method=c("poly","Linear"))
}
